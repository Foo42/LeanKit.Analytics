@model LeanKit.ReleaseManager.Models.Releases.ReleaseDetailViewModel

@{
    Layout = "~/Views/Layouts/_Layout.cshtml";
}

<div>
    <h1>Release Details</h1>
    <nav class="options-bar" id="release-options">
        <ul>
            <li class="release-note">Release Notes</li>
            @if (!Model.Status.HasCompleted)
            {
                <li class="edit-content">Edit Details/Tickets</li>
                <li class="mark-as-complete">Complete</li>
            }
            else
            {
                <li class="rollback">Rollback</li>
            }
        </ul>
    </nav>
    
    <div id="started-and-completed-form" data-release-id="@Model.Id">
        <div>
            <label>Started At:</label>
            <input type="date" id="started-at-field-date" value="@Model.ActualTime.StartedAtDateFieldValue" @(Model.Status.HasStarted ? "disabled" : string.Empty) />
            <input type="time" id="started-at-field-time" value="@Model.ActualTime.StartedAtTimeFieldValue" @(Model.Status.HasStarted ? "disabled" : string.Empty) />
        </div>
        <div>
            <label>Completed At:</label>
            <input type="date" id="completed-at-field-date" />
            <input type="time" id="completed-at-field-time" />
        </div>
        <div style="text-align: right;">
            <button type="submit" id="set-started-and-completed" class="form-button ladda-button slide-left"><span class="ladda-label">Update</span></button>
            <button id="cancel-started-and-completed" class="form-button cancel-button ladda-button"><span class="ladda-label">Cancel</span></button>
        </div>
    </div>
    
    <div id="rollback-form" data-release-id="@Model.Id">
        <div>
            <label>Rolled At:</label>
            <input type="date" id="rolledback-at-field-date" value=""/>
            <input type="time" id="rolledback-at-field-time" value=""/>
        </div>
        <div>
            <div>
                <label for="rolledback-reason">Reason:</label>
            </div>
            <textarea id="rolledback-reason"></textarea>
        </div>
        <div style="text-align: right;">
            <button type="submit" id="set-rollback" class="form-button ladda-button slide-left"><span class="ladda-label">Update</span></button>
            <button id="cancel-rollback" class="form-button cancel-button ladda-button"><span class="ladda-label">Cancel</span></button>
        </div>
    </div>

    <h2>Current Status:</h2>
    <div id="release-status">
        <div id="release-status-indicator" class="@Model.Status.CssClass"></div>
        @Model.Status.Text
    </div>

    <h2>Scheduling</h2>
    <div class="scheduling-entry">Planned for: @Model.PlannedTime.StartFriendlyText @Model.PlannedTime.Duration</div>
    @if (Model.Status.HasStarted)
    {
        <div class="scheduling-entry">Started: @Model.ActualTime.StartedFriendlyText</div>
    }
    @if (Model.Status.HasCompleted)
    {
        <div class="scheduling-entry">Completed: @Model.ActualTime.CompletedFriendlyText (took @Model.ActualTime.Duration mins)</div>     
    }
    
    <h2>Detail:</h2>
    <div>
        SVN Revision: @Model.SvnRevision<br />
        Service Now ID: @Model.ServiceNowId<br />
    </div>

    <h2>Included Tickets</h2>
    <ul id="ticket-list">
        @foreach (var ticket in Model.IncludedTickets)
        {
            <li>
                <div class="ticket-item">
                    <div class="ticket-id"><a href="/Ticket/@ticket.Id">@ticket.ExternalId</a></div>
                    @ticket.Title
                    <div class="ticket-bottom-bar">
                        <div class="ticket-size">Size: @ticket.Size</div>
                        <div class="ticket-activity">Ready for Release</div>
                    </div>
                </div>
                
                <ul class="ticket-approval-list" style="display: none;">
                    <li class="approval-item"><div class="approval-indicator approved"></div>BAT - approved</li> 
                    <li class="approval-item"><div class="approval-indicator"></div>SEO - requested</li> 
                </ul>
            </li>
        }
    </ul>
</div>


@section Javascript
{
    <script type="text/javascript">
        (function() {
            var $submitButton = $('#set-started-and-completed'),
                submitButton = Ladda.create($submitButton[0]),
                $rollbackButton = $('#set-rollback'),
                rollbackButton = Ladda.create($submitButton[0]);

            $('#release-options')
                .on('click', '.edit-content', function () {
                    var id = $('#started-and-completed-form').data('releaseId');
                    window.location = '/EditRelease/' + id;
                })
                .on('click', '.mark-as-complete', function () {
                    $('#started-and-completed-form').slideDown(300);
                })
                .on('click', '.rollback', function () {
                    $('#rollback-form').slideDown(300);
                });

            $('#cancel-started-and-completed').on('click', function () {
                $('#started-and-completed-form').slideUp(300);
            });
            
            $('#cancel-rollback').on('click', function () {
                $('#rollback-form').slideUp(300);
            });

            $rollbackButton.on('click', function () {
                var id = $('#rollback-form').data('releaseId');
                $.ajax('/Release/SetRollback/' + id, {
                    cache: false,
                    data: {
                        rolledbackAt: $('#rolledback-at-field-date').val() + ' ' + $('#rolledback-at-field-time').val(),
                        Reason: $('#rolledback-reason').val()
                    },
                    success: function () {
                        window.location = window.location + '';
                    }
                });
            });

            $submitButton.on('click', function() {
                $submitButton.addClass('active');
                $('#started-and-completed-form input').prop('disabled', true);
                $('#cancel-started-and-completed').prop('disabled', true);

                submitButton.start();

                var id = $('#started-and-completed-form').data('releaseId');
                var startedAsync = $.ajax('/Release/SetStarted/' + id, {
                    cache: false,
                    data: {
                        started: $('#started-at-field-date').val() + ' ' + $('#started-at-field-time').val()
                    }
                });
                var completedAsync = $.ajax('/Release/SetCompleted/' + id, {
                    cache: false,
                    data: {
                        completed: $('#completed-at-field-date').val() + ' ' + $('#completed-at-field-time').val()
                    }
                });

                $.when(startedAsync, completedAsync).then(function() {
                    submitButton.stop();
                    $submitButton.removeClass('active');
                    window.location = window.location + '';
                });
            });
        })();
    </script>
}
